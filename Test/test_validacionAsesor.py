# Generated by Selenium IDE
import os
import time

from pycparser.c_ast import Return
from selenium.common import NoSuchElementException
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

from utilidad import Util

BASE_URL = "https://appcrm-win.ultra.pe/"
VALIDACION_URL = f"{BASE_URL}pages/bo_asesor_validacion.php"
CREDENTIALS = {
    "username": "22222222",
    "password": "22222222"
}


class TestValidacionAsesor:
  def setup_method(self, method):
    self.util = Util(BASE_URL)
    self.driver = self.util.test_driver()
    self.resultado = 0

    # try:
    #     advanced_options_button = self.util.wait_id("details-button")
    #     if advanced_options_button:
    # #       advanced_options_button.click()
    #         self.util.wait_id_clic('proceed-link').click()
    # except Exception as e:
    #     print(f"Error clicking advanced options button: {e}")
    
    #Login
    self.util.wait_name_clic("username").send_keys(CREDENTIALS["username"])
    self.util.wait_name_clic("password").send_keys(CREDENTIALS["password"])
    self.util.wait_css_clic(".btn")
  
  def teardown_method(self, method):
    self.driver.quit()

  def test_all_validacion(self):
    recorridos = 0
    recorridos_temporal = 99

    while True:
      recorridos += 1

      if recorridos_temporal > 2:
        recorridos_temporal = 0
      else :
        break

      if recorridos > 40:
        break
      time.sleep(1)
      self.driver.get(VALIDACION_URL)
      time.sleep(1)

      table = self.util.wait_css("table")
      rows = table.find_elements(By.TAG_NAME, "tr")

      for row in rows:

        if row.text == '# FECHA VENTA VENDEDOR AREA ORIGEN VENTA CONTRATO TELEFONO DOC CLIENTE ESTADO DETALLE DEPARTAMENTO PROVINCIA DISTRITO GRUPO ALERT SCORE':
          continue

        if row.text.startswith('Mostrando '):
          continue

        recorridos_temporal  += 5
        time.sleep(1)
        columns = row.find_elements(By.TAG_NAME, "td")
        self.one_validacion(columns)
        break
  
  def one_validacion(self, columns):

    try:
      columns[0].find_element(By.CLASS_NAME, "edit").click()
    except Exception:
      return 1

    time.sleep(3)

    try:
      resultado = self.util.driver.find_element(By.CLASS_NAME, "showSweetAlert")

      if resultado.text == 'ALERTA\nRevisar Score - Contingencia\nOK':
        self.util.wait_css(".confirm").click()

    except Exception:
      print('')


    self.util.wait_id_clic("cb_resultado1").send_keys("A" + Keys.RETURN)
    time.sleep(1)
    self.util.wait_id_clic("cb_resultado2").send_keys("T" + Keys.RETURN)
    self.util.wait_id_clic("txt_descripcion_validacion").send_keys("MIGRACIÃ“N WIN-ULTRA")
    self.util.wait_id_clic("bt_guardar")

    time.sleep(2)

    self.util.wait_id_clic("boton_enviar_validacion")
    try:
      self.util.wait_css_clic(".confirm")
    except Exception:
      return 0
    return 0
  
